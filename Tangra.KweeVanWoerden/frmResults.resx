<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        F7QAAZ8KA4kEAHIDAGwBAF4CAFEDAEcEAUUDAEUDAEYEAkEDATwAAD4CAEMDAEgBAEsAAUwCAFcBAF4A
        AWMAAW4AAXgEAIYGAJMAAJgACqoAFLIAFa0BFKsACqEAAZUBAJIDAIQEAGwDA1wAAlMAAU8DAUoDAEUD
        AkMDAUIBAEEDAT4CATkBAD4AAD0DAUEDAkQCAUQCAE8CAVMBAFYCAV4FAWcFAXMCAXsAAH4AAYMEAoYG
        AoUDAIEIAH4IAH0BAXUAAWsAAlwAA1IAA0wBAUcEAEUEAUICAUACAUEBAEADAT0CAjgBATwAAT0DAT8C
        AT4BAUACAEgDAE8CAVMFAFgIAF4FAGMBAGUBAGMDAGMFA2YAAmQAA2MAAmEEAV4FAFoGAFcGAFcDAFIB
        AEwCAEcDAEIEAD8AAD0CAD4CAD4CAjsBATUAADoAAD8BAUACAUECAEMDAEUDAEsCAFADAVICAVMDAFcD
        AFoDAFoBAFkBAFQBAFABAFABAFIDAkwDAkgDAUwCAE8CAEkCAEECAEICAEMDAEEDAD8DAD0CADwEAjcE
        ADAAATYAATwBAj4AAD0AAD4CAEMDAEYEAUoFAUwEAU0EAU8CAFECAFECAFEBAE0CAUoBAEoBAEoCAUgB
        AEYCAEgCAUkCAEQAAD8BAD8AAD8CAD8DAT0BATsAADgCATYEATACAjICAzcBAzoAAjwBAT4BAEABAEAD
        AkEDAUMCAEMCAUYCAkgCAUcCAkgCAUUCAUICAUICAUMEAUYCAEUCAEICAUECAUABAT0BAT0BAT4CAT0C
        ADsBADgAADYBATMDATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>