<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAXCAYAAAARIY8tAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAs1JREFUSEvtlMtP
        E1EYxUfDxgQVjURXPlkQYuKGkBgXrvFfMEY3mhg36gZD0EQMGkVNDNGFtpUKEbGlUCm25VWZ0te0dTp9
        1xiE8pAokQIW+rAev8IsINMHJrow8SQnmZl7zvxm7sy9DP6y/gOK6rcAkcgHqFRqeAWveKW4Ng2YmfkM
        09AwNGotdDojopNRcaSwNg0QfEGw+k7Mh9rBjyphsbmQTqfF0fzaFGAyGoUQHMeYQ45ly3Esj92DjQsj
        GAqKifwqCkgmkzCZRiDYTQiZbuN1cyU+Ou7Dx7vQpzcgkUiIydwqCgiHI3C5fIjxj3Ht7DEwW/ag4cop
        xGd6MGpxQhB8YjK3CgJSqRRYswV+txmZwF3UnakCs3Uv6i9WAvH7CHgdMBgGsLKyIjakKgjgeQ/8gQhm
        nS1YGqxF3bmjYJhS1F8iwOJpJOc66O0EjLxjxYZUeQHZuX2rNyLs47DovomM+RAaLpTTGxxAc/0R4Mt2
        gpxHOGiHWtWDeDwuNjcqL4BlzXDYbPjqbsH3IXpifwnuXN6J3fuqIXtYAcSoGitHYrEJVqsNRuOA2Nyo
        nICFhQX09w/iE69Dyl6LlIliAoNxtoTWQhmmA9uAJbqWyNZPYiLah95ePebnY2s3WKecAKNxEO95P5aF
        RqSHSwEHxUIMhl/uQuP1ajhG9gPpbJXGUEXT+QhulwfdGu1qf70kgKmpKahfdWCC76V5r0HKQBGOPM7g
        1tUdOFxRA42qjJLZ6kHyCfINTE9zaH/RjujExi1EAtDp+hDwuGmeaJXOPqWP2UTH5B9N8Dmf0FMq8G3u
        ASVbyJ1kPZnymEOYVnZ3VzcyPzN0viYJoK2tDZouNdhRO1irl0x7kIVsDoJz+uDhvbDaAvQT+MkCmSc7
        YWateKPVQvZMVhjAcRyUSuVqUCFX5LbiucRymRytra2wWqzindYkAfxp/esA4BfeN/JhMWwHrgAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Please know that Tangra will not be able to read your timestamp in all conditions. Nearby stars, bright or diverse background or partially hidden timestamp can all be legitimate reasons for the timestamp recognition to fail. 

If only one of the two video fields is grabbed or not all video frames are present in the video the timestamp reading will not work.

If you think that your timestamp looks allright and you would like Tangra to be able to read it then please submit an error report using the button below.

If you would like me to contact you about this error then send me an email as well.</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAXCAYAAAARIY8tAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAs1JREFUSEvtlMtP
        E1EYxUfDxgQVjURXPlkQYuKGkBgXrvFfMEY3mhg36gZD0EQMGkVNDNGFtpUKEbGlUCm25VWZ0te0dTp9
        1xiE8pAokQIW+rAev8IsINMHJrow8SQnmZl7zvxm7sy9DP6y/gOK6rcAkcgHqFRqeAWveKW4Ng2YmfkM
        09AwNGotdDojopNRcaSwNg0QfEGw+k7Mh9rBjyphsbmQTqfF0fzaFGAyGoUQHMeYQ45ly3Esj92DjQsj
        GAqKifwqCkgmkzCZRiDYTQiZbuN1cyU+Ou7Dx7vQpzcgkUiIydwqCgiHI3C5fIjxj3Ht7DEwW/ag4cop
        xGd6MGpxQhB8YjK3CgJSqRRYswV+txmZwF3UnakCs3Uv6i9WAvH7CHgdMBgGsLKyIjakKgjgeQ/8gQhm
        nS1YGqxF3bmjYJhS1F8iwOJpJOc66O0EjLxjxYZUeQHZuX2rNyLs47DovomM+RAaLpTTGxxAc/0R4Mt2
        gpxHOGiHWtWDeDwuNjcqL4BlzXDYbPjqbsH3IXpifwnuXN6J3fuqIXtYAcSoGitHYrEJVqsNRuOA2Nyo
        nICFhQX09w/iE69Dyl6LlIliAoNxtoTWQhmmA9uAJbqWyNZPYiLah95ePebnY2s3WKecAKNxEO95P5aF
        RqSHSwEHxUIMhl/uQuP1ajhG9gPpbJXGUEXT+QhulwfdGu1qf70kgKmpKahfdWCC76V5r0HKQBGOPM7g
        1tUdOFxRA42qjJLZ6kHyCfINTE9zaH/RjujExi1EAtDp+hDwuGmeaJXOPqWP2UTH5B9N8Dmf0FMq8G3u
        ASVbyJ1kPZnymEOYVnZ3VzcyPzN0viYJoK2tDZouNdhRO1irl0x7kIVsDoJz+uDhvbDaAvQT+MkCmSc7
        YWateKPVQvZMVhjAcRyUSuVqUCFX5LbiucRymRytra2wWqzindYkAfxp/esA4BfeN/JhMWwHrgAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAQAAAABAAoAQAAJgAAACAgEAAAAAQA6AIAAE4BAAAoAAAAEAAAACAAAAABAAQAAAAAAIAA
        AAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AHiIiIiIiIiHiHd3d3d3d4iHd3d3d3d3eId3d3iHd3d4h3iHeId4
        h3iHeId4h3iHeId4h3iHeId4h3iHeId4h3iHeId4h3iHeId3d3iHd3d4h3d3iIh3d3iHd4iHeIh3eId4
        h3d3eId4h3h3d3d3h3iId3d3d3d3iHiIiIiIiIiHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAgAAAAQAAAAAEABAAAAAAAAAIAAAAA
        AAAAAAAAEAAAABAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD/
        /wD/AAAA/wD/AP//AAD///8AeIiIiIiIiIiIiIiIiIiIh4iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
        iIiIiIiIiIh3d3d3d3d3d3d3d3eIiIiHd3d3d3d3d3d3d3d3eIiIh3d3d3d3iId3d3d3d3iIiId3d3d3
        d4iHd3d3d3d4iIiHd3iId3eIh3d3iId3eIiIh3d4iHd3iId3d4iHd3iIiId3eIh3d4iHd3eIh3d4iIiH
        d3iId3eIh3d3iId3eIiIh3d4iHd3iId3d4iHd3iIiId3eIh3d4iHd3eIh3d4iIiHd3iId3eIh3d3iId3
        eIiIh3d4iHd3iId3d4iHd3iIiId3eIh3d4iHd3eIh3d4iIiHd3iId3eIh3d3iId3eIiIh3d4iHd3iId3
        d4iHd3iIiId3eIh3d4iHd3eIh3d4iIiHd3d3d3iIiHd3d3d3eIiIh3d3d3eIiIiHd3d3d3iIiId3d3eI
        iIiIiId3d3d4iIiHd3d4iIh3eIiId3d3eIiIh3d3iIiHd3eIiId3d3iIiId3iIiHd3d3eIiIh3d4iIiH
        eIiId3d3d3d4iIh3eIiIh3eIh3d3d3d3d4iHd3iIiId3d3d3d3d3d3d3d3d4iIiHd3d3d3d3d3d3d3d3
        eIiIiHd3d3d3d3d3d3d3d4iIiIiIiIiIiIiIiIiIiIiIiHiIiIiIiIiIiIiIiIiIiIcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>